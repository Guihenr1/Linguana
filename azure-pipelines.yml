
trigger:
  - master

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  dotnetVersion: '9.0.x'
  # Add Azure App Service variables
  azureSubscription: 'Azure subscription 1'
  webAppName: 'Linguana-API'
  environmentName: 'dev'
  keyVaultName: 'kv-linguana-dev'

stages:
  - stage: Build
    jobs:
      - job: Build
        pool:
          vmImage: 'ubuntu-22.04'
        steps:
          - task: UseDotNet@2
            displayName: 'Install .NET SDK'
            inputs:
              version: $(dotnetVersion)
              includePreviewVersions: true

          - script: |
              sudo apt-get update
              sudo apt-get install -y mono-complete
            displayName: 'Install Mono'

          - task: NuGetToolInstaller@1
            displayName: 'Install NuGet tool'

          - task: NuGetCommand@2
            displayName: 'NuGet restore'
            inputs:
              command: 'restore'
              restoreSolution: '$(solution)'
              feedsToUse: 'select'

          - task: DotNetCoreCLI@2
            displayName: 'Build solution'
            inputs:
              command: 'build'
              projects: '$(solution)'
              arguments: '--configuration $(buildConfiguration)'

          - task: DotNetCoreCLI@2
            displayName: 'Run tests'
            inputs:
              command: 'test'
              projects: '**/*Tests/*.csproj'
              arguments: '--configuration $(buildConfiguration)'

          - task: DotNetCoreCLI@2
            displayName: 'Publish'
            inputs:
              command: 'publish'
              publishWebProjects: true
              arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
              zipAfterPublish: true

          - task: PublishBuildArtifacts@1
            displayName: 'Publish artifacts'
            inputs:
              pathtoPublish: '$(Build.ArtifactStagingDirectory)'
              artifactName: 'drop'

  - stage: Deploy_Dev
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: Deploy
        pool:
          vmImage: 'ubuntu-latest'
        environment: $(environmentName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureKeyVault@2
                  inputs:
                    azureSubscription: $(azureSubscription)
                    KeyVaultName: $(keyVaultName)
                    SecretsFilter: 'OpenAiApiKey'
                    RunAsPreJob: true

                - task: AzureWebApp@1
                  displayName: 'Deploy to Azure Web App'
                  inputs:
                    azureSubscription: $(azureSubscription)
                    appName: $(webAppName)
                    package: '$(Pipeline.Workspace)/drop/**/*.zip'
                    resourceGroupName: 'rg-linguana-dev'